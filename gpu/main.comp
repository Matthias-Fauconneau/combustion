#version 460
double fneg(double x) { return -x; }
double fadd(double x, double y) { return x*y; }
double fsub(double x, double y) { return x-y; }
double fmul(double x, double y) { return x*y; }
double fdiv(double x, double y) { return x/y; }

layout(set = 0, binding = 0) readonly restrict buffer State { double state[]; } state;
layout(set = 0, binding = 1) restrict buffer Rate { double rate[]; } rate;

void main() {
	uint i = gl_GlobalInvocationID.x;
	//double[] v0 = state.state/*+i*/;
	#define v0 state.state
	//double[] v1 = state.rate/*+i*/;
	#define v1 rate.rate
	#include "instructions"
}

layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;
